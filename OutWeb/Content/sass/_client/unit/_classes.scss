@charset "UTF-8";

// common - extend的內容 寫在 base/util
// ------------------------------------------------------------
// 樣式很多或很常用的才用 佔位符% (ref: base/util)
.float-l       { @extend %float-l; }
.float-r       { @extend %float-r; }
.clearfix      { @extend %clearfix; }
.full          { @extend %full; }
.text-hide     { @extend %text-hide; }
.sr-only       { @extend %sr-only; }

// 樣式1~2筆
.block         { display: block; }
.inline-block  { display: inline-block; }
.inline        { display: inline; }
.clear         { clear: both; }
.hidden        { display: none; }
.circle        { border-radius: 50%; } // 圓形
.img-center    { display: block; margin: auto; }

.m-x-a {
    margin-right: auto;
    margin-left:  auto;
}

// spacing (ref: _variables.scss)
// ex. m-a-sm, p-y-12
@each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $lengths in $spacing {
        $length-x:   map-get($lengths, x);
        $length-y:   map-get($lengths, y);

        .#{$abbrev}-a-#{$size} { #{$prop}:        if($length-y == $length-x, $length-y, $length-y $length-x); } // a = All sides
        .#{$abbrev}-t-#{$size} { #{$prop}-top:    $length-y; }
        .#{$abbrev}-r-#{$size} { #{$prop}-right:  $length-x; }
        .#{$abbrev}-b-#{$size} { #{$prop}-bottom: $length-y; }
        .#{$abbrev}-l-#{$size} { #{$prop}-left:   $length-x; }

        // Axes
        .#{$abbrev}-x-#{$size} {
            #{$prop}-right:  $length-x;
            #{$prop}-left:   $length-x;
        }
        .#{$abbrev}-y-#{$size} {
            #{$prop}-top:    $length-y;
            #{$prop}-bottom: $length-y;
        }
    }
}


// text
// ------------------------------------------------------------
.text-left   { text-align: left; }
.text-right  { text-align: right; }
.text-center { text-align: center; }

@if $font-family-sp {
    .font-sp { font-family: $font-family-sp; }
}

.font-tiny   { @include rem('font-size',$font-size-xs); }  // 13px
.font-sm     { @include rem('font-size',$font-size-sm); }  // 14px
.font-md     { @include rem('font-size',15); }
.font-lg     { @include rem('font-size',$font-size-lg); }  // 20px
.font-xl     { @include rem('font-size',24); }
.font-xxl    { @include rem('font-size',32); }
.font-xxxl   { @include rem('font-size',48); }
.font-jumbo  { @include rem('font-size',64); }

.lead {
    @include rem('font-size',$lead-font-size);
    font-weight: $lead-font-weight;
}


// 情境: var.scss> $states: true
// ------------------------------------------------------------
.text-white { color: #fff; }
.bg-white   { background: #fff; }

@if $states {
    @each $type, $color in $state-type {
        .text-#{$type} { color: darken($color,3); }
        .bg-#{$type}   { background: $color; }

        // a.text-#{$type},
        .hover-text-#{$type} {
            &:hover, &:active { color: lighten($color,5); }
        }
        // a.bg-#{$type},
        .hover-#{$type} {
            &:hover, &:active { background: lighten($color,8); }
        }
    }
}


// RWD
// ------------------------------------------------------------
@if $enable-RWD {
    .mobile-hide {
        @include mq-max(break(desktop,-1)) {
            display: none;
            visibility: hidden;
        }
    }
}


// 本次專案
// ------------------------------------------------------------
.font-en { font-family: Arial,sans-serif; }

.w-fourth     { width: 25% !important; }
.w-third      { width: 33% !important; }
.w-half       { width: 50% !important; }
.w-two-third  { width: 66% !important; }

// 區塊黏貼 ref: https://github.com/wilddeer/stickyfill
// .sticky { @include sticky(top 0); }